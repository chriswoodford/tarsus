// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tarsus.Views.Bootstrap.Tooltip = (function(_super) {

    __extends(Tooltip, _super);

    function Tooltip() {
      return Tooltip.__super__.constructor.apply(this, arguments);
    }

    Tooltip.prototype.tagName = 'a';

    Tooltip.prototype.attributes = {
      href: '#'
    };

    Tooltip.prototype.defaults = {
      bootstrap: {
        animation: true,
        html: false,
        placement: 'top',
        selector: false,
        title: '',
        trigger: 'hover focus',
        delay: 0,
        container: false
      },
      text: null
    };

    Tooltip.prototype.initialize = function(options) {
      _.bindAll(this);
      return this.options = _.extend(this.defaults, options);
    };

    Tooltip.prototype.render = function() {
      this.$el.text(this.options.text);
      this.$el.tooltip(this.options.bootstrap);
      return this;
    };

    Tooltip.prototype.show = function() {
      this.$el.tooltip('show');
      this.trigger('tarsus:tooltip:show');
      return this;
    };

    Tooltip.prototype.hide = function() {
      this.$el.tooltip('hide');
      this.trigger('tarsus:tooltip:hide');
      return this;
    };

    Tooltip.prototype.toggle = function() {
      this.$el.tooltip('toggle');
      this.trigger('tarsus:tooltip:toggle');
      return this;
    };

    Tooltip.prototype.destroy = function() {
      this.$el.tooltip('destroy');
      this.trigger('tarsus:tooltip:destroy');
      return this;
    };

    return Tooltip;

  })(Backbone.View);

}).call(this);
