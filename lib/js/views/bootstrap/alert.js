// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tarsus.Views.Bootstrap.Alert = (function(_super) {

    __extends(Alert, _super);

    function Alert() {
      return Alert.__super__.constructor.apply(this, arguments);
    }

    Alert.prototype.tagName = 'div';

    Alert.prototype.className = 'alert';

    Alert.prototype.defaults = {
      fadeIn: true
    };

    Alert.prototype.events = {
      'close': 'close',
      'closed': 'closed'
    };

    Alert.prototype.initialize = function(options) {
      _.bindAll(this);
      return this.options = _.extend(this.defaults, options);
    };

    Alert.prototype.render = function() {
      if (this.options.fadeIn) {
        this.$el.addClass('fade in');
      }
      if (this.options.status != null) {
        this.$el.addClass('alert-' + this.options.status);
      }
      this.$el.append(this.closeButton());
      if (this.options.title != null) {
        this.$el.append(this.header());
      }
      if (typeof template !== "undefined" && template !== null) {
        this.$el.addClass('alert-block');
        this.$el.append(this.template());
      } else {
        this.$el.append(this.options.text);
      }
      this.$el.alert();
      return this;
    };

    Alert.prototype.close = function() {
      this.trigger('tarsus:alert:close');
      return this;
    };

    Alert.prototype.closed = function() {
      this.trigger('tarsus:alert:closed');
      return this;
    };

    Alert.prototype.success = function() {
      this.options.status = 'success';
      return this;
    };

    Alert.prototype.info = function() {
      this.options.status = 'info';
      return this;
    };

    Alert.prototype.error = function() {
      this.options.status = 'error';
      return this;
    };

    Alert.prototype.closeButton = function() {
      return Backbone.$('<button type="button" class="close" data-dismiss="alert">&times;</button>');
    };

    Alert.prototype.headerContainer = function() {
      return Backbone.$('<h4 class="alert-heading"></h4>');
    };

    Alert.prototype.header = function() {
      return this.headerContainer.append(this.options.title);
    };

    return Alert;

  })(Backbone.View);

}).call(this);
